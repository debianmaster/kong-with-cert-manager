
# Do not use Kong Ingress Controller
ingressController:
 enabled: false
  
image:
 repository: kong/kong-gateway
 tag: "3.10.0.0"
  
# Mount the secret created earlier
secretVolumes:

  
env:
 # This is a control_plane node
 role: control_plane
 # These certificates are used for control plane / data plane communication
 cluster_cert: /etc/cert-manager/cluster/tls.crt
 cluster_cert_key: /etc/cert-manager/cluster/tls.key
  
 # Database
 # CHANGE THESE VALUES
 database: postgres
 pg_database: kong
 pg_user: kong
 pg_password: demo123
 pg_host: kong-cp-postgresql.kong.svc.cluster.local
 pg_ssl: "on"
  
 # Kong Manager password
 password: kong_admin_password
  
# Enterprise functionality
enterprise:
 enabled: false
  
# The control plane serves the Admin API
admin:
 enabled: true
 http:
   enabled: true
  
# Clustering endpoints are required in hybrid mode
cluster:
 enabled: true
 tls:
   enabled: true
  
clustertelemetry:
 enabled: true
 tls:
   enabled: true
  
# Optional features
manager:
 enabled: false
  
# These roles will be served by different Helm releases
proxy:
 enabled: false

postgresql:
  enabled: true
  auth:
    password: demo123

certificates:
  enabled: true
  clusterIssuer: selfsigned-cluster-issuer
  proxy:
    commonName: api.zelar.one
    dnsNames: 
      - '*.api.kong.zelar.one'
      - api.zelar.one
  admin:
    enabled: true
    commonName: api.kong.zelar.one 
    dnsNames: 
      - '*.api.kong.zelar.one'
      - api.zelar.one
  portal:
    enabled: false
  cluster:
    enabled: true
    dnsNames: 
      - kong-cp-kong-cluster.kong.svc.cluster.local
      - kong-cp-kong-clustertelemetry.kong.svc.cluster.local